/**
 * Lithuanian Bitmap Font Library
 * Column-major, little-endian bitmap format for LED matrix displays
 * Created by Mano (GitHub: YOUR_USERNAME)
 * License: MIT
 */

#ifndef LITHUANIAN_FONT_H
#define LITHUANIAN_FONT_H

#include <stdint.h>

typedef struct {
    const char character;    
    const uint8_t width;     
    const uint8_t height;    
    const uint8_t* data;     
    const uint8_t dataSize;  
} FontChar;

// Standard Latin & Lithuanian Characters (8x16)
static const uint8_t CHAR_A[] = {0xf0,0x3f,0xf8,0x3f,0x1c,0x06,0x0c,0x06,0x0c,0x06,0x1c,0x06,0xf8,0x3f,0xf0,0x3f};
static const uint8_t CHAR_A_OGONEK[] = {0xf0,0x3f,0xf8,0x3f,0x1c,0x06,0x0c,0x06,0x0c,0x06,0x1c,0x46,0xf8,0xbf,0xf0,0x3f};
static const uint8_t CHAR_B[] = {0xfc,0x3f,0xfc,0x3f,0xcc,0x30,0xcc,0x30,0xcc,0x30,0xcc,0x30,0x38,0x1f,0x30,0x0f};
static const uint8_t CHAR_C[] = {0xf0,0x0f,0xf8,0x1f,0x0c,0x30,0x0c,0x30,0x0c,0x30,0x0c,0x30,0x38,0x1c,0x30,0x0c};
static const uint8_t CHAR_C_CARON[] = {0xf0,0x0f,0xf8,0x1f,0x0d,0x30,0x0e,0x30,0x0e,0x30,0x0d,0x30,0x38,0x1c,0x30,0x0c};
static const uint8_t CHAR_D[] = {0xfc,0x3f,0xfc,0x3f,0x0c,0x30,0x0c,0x30,0x0c,0x30,0x30,0x0c,0xf0,0x0f,0xc0,0x03};
static const uint8_t CHAR_E[] = {0xfc,0x3f,0xfc,0x3f,0x8c,0x31,0x8c,0x31,0x8c,0x31,0x0c,0x30,0x0c,0x30,0x0c,0x30};
static const uint8_t CHAR_E_DOT[] = {0xfc,0x3f,0xfc,0x3f,0x8c,0x31,0x8a,0x31,0x8a,0x31,0x0c,0x30,0x0c,0x30,0x0c,0x30};
static const uint8_t CHAR_E_OGONEK[] = {0xfc,0x3f,0xfc,0x3f,0x8c,0x31,0x8c,0x31,0x8c,0x31,0x0c,0x30,0x0c,0xb0,0x0c,0x70};
static const uint8_t CHAR_F[] = {0xfc,0x3f,0xfc,0x3f,0x8c,0x01,0x8c,0x01,0x8c,0x01,0x0c,0x00,0x0c,0x00,0x0c,0x00};
static const uint8_t CHAR_G[] = {0xf0,0x0f,0xf8,0x1f,0x0c,0x30,0x0c,0x33,0x0c,0x33,0x0c,0x33,0x38,0x1f,0x30,0x0f};
static const uint8_t CHAR_H[] = {0xfc,0x3f,0xfc,0x3f,0x80,0x01,0x80,0x01,0x80,0x01,0x80,0x01,0xfc,0x3f,0xfc,0x3f};

// Narrow Characters (4x16)
static const uint8_t CHAR_I[] = {0x00,0x00,0xfc,0x3f,0xfc,0x3f,0x00,0x00};
static const uint8_t CHAR_I_OGONEK[] = {0x00,0x40,0xfc,0xbf,0xfc,0x3f,0x00,0x00};

// Continue with remaining standard width characters
static const uint8_t CHAR_J[] = {0x0c,0x06,0x0c,0x0c,0x0c,0x18,0x0c,0x30,0x0c,0x30,0x0c,0x18,0xfc,0x0f,0xfc,0x07};
static const uint8_t CHAR_K[] = {0xfc,0x3f,0xfc,0x3f,0x80,0x01,0xc0,0x03,0x30,0x0c,0x30,0x0c,0x0c,0x30,0x0c,0x30};
static const uint8_t CHAR_L[] = {0xfc,0x3f,0xfc,0x3f,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x30};

// Wide Characters (16x16)
static const uint8_t CHAR_M[] = {0x00,0x00,0x00,0x00,0x00,0x00,0xfc,0x3f,0xfc,0x3f,0x38,0x00,0x60,0x00,0xc0,0x01,0xc0,0x01,0x60,0x00,0x38,0x00,0xfc,0x3f,0xfc,0x3f,0x00,0x00,0x00,0x00,0x00,0x00};
static const uint8_t CHAR_N[] = {0x00,0x00,0x00,0x00,0x00,0x00,0xfc,0x3f,0xfc,0x3f,0x18,0x00,0x30,0x00,0xc0,0x00,0x80,0x01,0x00,0x06,0x00,0x0c,0xfc,0x3f,0xfc,0x3f,0x00,0x00,0x00,0x00,0x00,0x00};
static const uint8_t CHAR_O[] = {0x00,0x00,0x00,0x00,0x00,0x00,0xe0,0x07,0xf0,0x0f,0x18,0x18,0x0c,0x30,0x0c,0x30,0x0c,0x30,0x0c,0x30,0x18,0x18,0xf0,0x0f,0xe0,0x07,0x00,0x00,0x00,0x00,0x00,0x00};

// Continue with remaining characters
// ... (I'll continue in the next message due to length)
